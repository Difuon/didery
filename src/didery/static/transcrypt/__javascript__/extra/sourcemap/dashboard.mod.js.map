{
	"version": 3,
	"file": "/Users/brady/Desktop/Programmering/Xaltry/didery/src/didery/static/transcrypt/__javascript__/dashboard.mod.js",
	"sources": [
		"/Users/brady/Desktop/Programmering/Xaltry/didery/src/didery/static/transcrypt/dashboard.py"
	],
	"sourcesContent": [
		"# ================================================== #\n#                     DASHBOARD                      #\n# ================================================== #\n# Author: Brady Hammond                              #\n# Created: 04/26/2018                                #\n# Last Edited:                                       #\n# Last Edited By:                                    #\n# ================================================== #\n#                      IMPORTS                       #\n# ================================================== #\n\n# ================================================== #\n#                  CLASS DEFINITIONS                 #\n# ================================================== #\n\nclass Tab:\n    Name = \"\"\n    Data_tab = \"\"\n    Active = False\n\n    def __init__(self):\n        self._menu_attrs = {\"data-tab\": self.Data_tab}\n        self._tab_attrs = {\"data-tab\": self.Data_tab}\n        self._menu = \"a.item\"\n        self._tab = \"div.ui.bottom.attached.tab.segment\"\n\n        if self.Active:\n            self._menu += \".active\"\n            self._tab += \".active\"\n\n    # ============================================== #\n\n    def menu_item(self):\n        return m(self._menu, self._menu_attrs, self.Name)\n\n    # ============================================== #\n\n    def tab_item(self):\n        return m(self._tab, self._tab_attrs, self.main_view())\n\n    # ============================================== #\n\n    def main_view(self):\n        return m(\"div\", \"hello \" + self.Name)\n\n# ================================================== #\n\nclass Tabs:\n    def __init__(self):\n        self.tabs = []\n\n        jQuery(document).ready(lambda: jQuery('.menu > a.item').tab())\n\n    def currentTab(self):\n        active = jQuery(\".menu a.item.active\")\n        data_tab = active.attr(\"data-tab\")\n        for tab in self.tabs:\n            if tab.Data_tab == data_tab:\n                return tab\n        return None\n\n    def view(self):\n        menu_items = []\n        tab_items = []\n        for tab in self.tabs:\n            menu_items.append(tab.menu_item())\n            tab_items.append(tab.tab_item())\n\n        return m(\"div\",\n                 m(\"div.ui.top.attached.tabular.menu\",\n                   m(\"a.active.item.tab\",\n                     m(\"span.menu-item-text\", \"Server Status\"),\n                     m(\"i.chart.bar.icon\")),\n                   m(\"a.item.tab\",\n                     m(\"span.menu-item-text\", \"Public Keys\"),\n                     m(\"i.key.icon\")),\n                   m(\"a.item.tab\",\n                     m(\"span.menu-item-text\", \"Encrypted Blobs\"),\n                     m(\"i.unlock.alternate.icon\")),\n                   m(\"a.item.tab\",\n                     m(\"span.menu-item-text\", \"Relay Servers\"),\n                     m(\"i.server.icon\")),\n                   m(\"a.item.tab\",\n                     m(\"span.menu-item-text\", \"Error Logs\"),\n                     m(\"i.exclamation.circle.icon\")),\n                   m(\"div.right.menu\",\n                     m(\"div.item\",\n                       m(\"div#search.ui.transparent.icon.input\",\n                         m(\"input[type=text][placeholder=Search...]\"),\n                           m(\"i.search.link.icon\"))))),\n                 m(\"div.ui.bottom.attached.segment\",\n                   m(\"p\", \"Content Will be visible here.\")))\n\n# ================================================== #\n#                        EOF                         #\n# ================================================== #"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}