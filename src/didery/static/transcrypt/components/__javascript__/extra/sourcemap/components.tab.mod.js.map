{
	"version": 3,
	"file": "/Users/bradyhammond/Documents/Xaltry/didery/src/didery/static/transcrypt/components/__javascript__/components.tab.mod.js",
	"sources": [
		"/Users/bradyhammond/Documents/Xaltry/didery/src/didery/static/transcrypt/components/tab.py"
	],
	"sourcesContent": [
		"# ================================================== #\n#                         TAB                        #\n# ================================================== #\n# Author: Brady Hammond                              #\n# Created: 05/08/2018                                #\n# Last Edited:                                       #\n# Last Edited By:                                    #\n# ================================================== #\n#                      IMPORTS                       #\n# ================================================== #\n\n# ================================================== #\n#                  CLASS DEFINITIONS                 #\n# ================================================== #\n\nclass Tab:\n    \"\"\"\n    Base class for tabs, including menu link and displayed tab itself.\n    \"\"\"\n    Name = \"\"\n    Icon = \"\"\n    DataTab = \"\"\n    Active = False\n\n    def __init__(self):\n        \"\"\"\n        Initialize Tab object. Load base attributes and markup.\n        \"\"\"\n        self._menu_attrs = {\"data-tab\": self.DataTab}\n        self._tab_attrs = {\"data-tab\": self.DataTab}\n        self._menu = \"a.item\"\n        self._tab = \"div.ui.bottom.attached.tab.segment\"\n\n        if self.Active:\n            self._menu += \".active\"\n            self._tab += \".active\"\n\n    # ============================================== #\n\n    def menu_item(self):\n        \"\"\"\n        Returns menu item markup for given tab.\n        \"\"\"\n        return m(self._menu, self._menu_attrs, self.Name)\n\n    # ============================================== #\n\n    def tab_item(self):\n        \"\"\"\n        Returns tab item markup for given tab.\n        \"\"\"\n        return m(self._tab, self._tab_attrs, self.main_view())\n\n    # ============================================== #\n\n    def main_view(self):\n        \"\"\"\n        Returns main view markup for given tab.\n        \"\"\"\n        return m(\"div\", \"hello \" + self.Name)\n\n# ================================================== #\n#                        EOF                         #\n# ================================================== #"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AAIA;AAAA;AAIA;AAIA;AAAA;AAIA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}